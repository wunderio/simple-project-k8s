suite: Site ConfigMaps
templates:
  - configmap.yaml
tests:
  - it: is a ConfigMap
    template: configmap.yaml
    asserts:
      - isKind:
          of: ConfigMap

  - it: injects custom nginx configuration into server context
    template: configmap.yaml
    set:
      nginx:
        serverExtraConfig: |
          location = /randomlocation {
            return 418; 
          }
    asserts:
    - matchRegex:
        path: data.simple_conf
        pattern: "location = /randomlocation"

  - it: injects the nginx configuration
    template: configmap.yaml
    set:
      nginx:
        loglevel: 'debug'
        basicauth:
          enabled: true
        realipfrom: '1.2.3.4'
    asserts:
    - template: configmap.yaml
      matchRegex:
        path: data.nginx_conf
        pattern: '/proc/self/fd/2 debug;'
    - template: configmap.yaml
      matchRegex:
        path: data.nginx_conf
        pattern: 'set_real_ip_from *1.2.3.4'
    - template: configmap.yaml
      matchRegex:
        path: data.simple_conf
        pattern: 'auth_basic "Restricted";'

  - it: tests nginx security headers
    template: configmap.yaml
    set:
      nginx:
        security_headers: 
          foo: bar
        content_security_policy: "baz"
    asserts:
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  X-XSS-Protection "1; mode=block";'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  foo bar;'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  Content-Security-Policy "baz" always;'

  - it: tests ability to set empty nginx security headers
    template: configmap.yaml
    set:
      nginx:
        security_headers: null
        content_security_policy: ""
    asserts:
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  X-XSS-Protection "1; mode=block";'
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  header_foo value_bar;'
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  Content-Security-Policy "baz" always;'

  - it: tests ability to unset a single default nginx security header
    template: configmap.yaml
    set:
      nginx:
        security_headers:
          X-XSS-Protection: ""
          foo: bar
    asserts:
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  X-XSS-Protection'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  Referrer-Policy "no-referrer, strict-origin-when-cross-origin" always;'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  foo bar;'
