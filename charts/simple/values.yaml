
# Main domain of the cluster.
# Subdomains of this domain will be created automatically for each environment.
clusterDomain: "silta.wdr.io"

# An optional human-readable label for the project, defaults to the repository name.
# This name is mainly used to create nice subdomains for each environment.
projectName: ""

# An optional human-readable label for the environment, defaults to the release name.
# We typically pass the branch name when we build dedicated environments per branch.
# This name is mainly used to create nice subdomains for each environment.
environmentName: ""

# The app label added to our Kubernetes resources.
app: simple

# Configuration for the wunderio/silta-release subchart.
silta-release:
  downscaler:
    enabled: false

# How many instances of the resulting pod should be in our Kubernetes deployment.
# A single pod (the default value) is good for development environments to minimise resource usage.
# Multiple pods make sense for high availability.
replicas: 1

# Enable autoscaling using HorizontalPodAutoscaler
# see: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80

# Domain names that will be mapped to this deployment.
# Example of exposing 2 additional domains for this deployment, each with its own certificate.
# exposeDomains:
#   example:
#     hostname: example.com
#   example2:
#     hostname: example1.com
#     # Reference to a key under `ingress`
#     ingress: gce
#     ssl:
#       enabled: true
#       issuer: letsencrypt-staging
#   example_www:
#     hostname: www.example.com
#   example_no_https:
#    hostname: insecure.example.com
#      ssl: 
#        enabled: false
exposeDomains: {}

exposeDomainsDefaults:
  ingress: default

# Settings for default site provided by this deployment
ssl:
  # Enable HTTPS for this deployment
  enabled:  true
  # Possible issuers: letsencrypt-staging, letsencrypt, selfsigned, custom
  issuer: letsencrypt
  # Only when certificate type is custom
  # ca: ""
  # key: ""
  # crt: ""

ingress:
  default:
    type: traefik
    tls: true
    redirect-https: true
  gce:
    type: gce
    # The name of the reserved static IP address.
    # It is best to first reserve the IP address and then add it here.
    # staticIpAddressName: null
    # Custom ingress annotations
    # extraAnnotations:
    #   networking.gke.io/suppress-firewall-xpn-error: "true"

# Infrastructure related settings.
cluster:
  type: gke
  vpcNative: false

# backendConfig customizations for main service
backendConfig:
  securityPolicy:
    name: "silta-ingress"

# These variables are build-specific and should be passed via the --set parameter.
nginx:
  image: 'you need to pass in a value for nginx.image to your helm chart'

  # The Kubernetes resources for the nginx container.
  # These values are optimised for development environments.
  resources:
    requests:
      cpu: 1m
      memory: 5M

  loglevel: error 
  
  # Set of values to enable and use http basic authentication
  #Â It is implemented only for very basic protection (like web crawlers)
  basicauth:
    enabled: true

    # Define username and password
    credentials:
      username: silta
      password: demo

    # Trust X-Forwarded-For from these hosts for getting external IP 
    realipfrom: 10.0.0.0/8

    # Add IP addresses that should be excluded from basicauth
    noauthips:
      gke-internal: 10.0.0.0/8

  # Robots txt file blocked by default
  robotsTxt:
    allow: false

  # Security headers
  # includeSubdomains should be used whenever possible, but before enabling it needs to be made sure there are no subdomains not using https:
  hsts_include_subdomains: ""
  #hsts_include_subdomains: " includeSubDomains;"
  #content_security_policy: "upgrade-insecure-requests; default-src https: data: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self'; base-uri 'self'; object-src 'self'; connect-src wss: https:"


  # Extra configuration block in server context. 
  serverExtraConfig: |
